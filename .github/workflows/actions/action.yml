name: 'Deploy to EKS'
description: 'Deploy Kubernetes manifests to an EKS cluster'
inputs:
  k8s-manifest-path:
    description: 'Path to the Kubernetes manifests directory'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: eks-image-repository
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
        kubectl version --client

    - name: Set up kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
    
    - name: Update Kubernetes manifests
      run: |
        find ./k8s/manifests/ -type f -name "*.yml" -exec sed -i "s|<docker-image>:.*|${{ steps.login-ecr.outputs.registry }}/eks-image-repository:${{ github.sha }}|g" {} \;


    - name: Deploy Kubernetes Manifests
      run: |
        kubectl apply -f ${{ inputs.k8s-manifest-path }} 
        kubectl get pods 
